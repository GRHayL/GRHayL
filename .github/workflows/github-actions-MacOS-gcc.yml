name: MacOS-gcc

on:
  push:
    paths-ignore: ['docs/**', '*.md', 'Makefile_old', '.gitattributes', '.gitignore', 'AUTHORS', 'LICENSE', 'implementations/**']
    branches: main
  pull_request:
    paths-ignore: ['docs/**', '*.md', 'Makefile_old', '.gitattributes', '.gitignore', 'AUTHORS', 'LICENSE', 'implementations/**']

jobs:
  ET-Legacy:
    strategy:
      fail-fast: false
      matrix:
        test-function: [conservs, primitives, induction_gauge_rhs, HLL_flux, reconstruction, flux_source]
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/ET_Legacy/ET_Legacy_${{ matrix.test-function }}_input.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/ET_Legacy/ET_Legacy_${{ matrix.test-function }}_output.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/ET_Legacy/ET_Legacy_${{ matrix.test-function }}_output_pert.bin
      - name: Run ET IllinoisGRMHD unit test for ET_Legacy_${{ matrix.test-function }}
        run: ./test/unit_test_ET_Legacy_${{ matrix.test-function }}
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  c2p-routines:
    strategy:
      fail-fast: false
      matrix:
        test-function: [apply_conservative_limits, con2prim_multi_method_hybrid, enforce_primitive_limits_and_compute_u0, compute_conservs_and_Tmunu]
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/metric_Bfield_initial_data.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/${{ matrix.test-function }}_input.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/${{ matrix.test-function }}_output.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/${{ matrix.test-function }}_output_pert.bin
      - name: Run con2prim unit test for ${{ matrix.test-function }} functions
        run: ./test/unit_test_${{ matrix.test-function }}
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  c2p-failure:
    strategy:
      fail-fast: false
      matrix:
        test-function: [hybrid_failure]
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Run con2prim unit test for ${{ matrix.test-function }} function
        run: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`pwd`/lib ./test/unit_test_${{ matrix.test-function }}
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  tabulated-eos:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy test data to working directory
        run: curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/EOS/simple_table.h5
      - name: Run tabulated EOS unit test
        run: ./test/unit_test_tabulated_eos simple_table.h5
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  piecewise-polytrope-eos:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Run piecewise polytrope EOS unit test
        run: ./test/unit_test_piecewise_polytrope
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  grhayl-core:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/grhayl_core/grhayl_core_test_suite_input.bin
      - name: Run GRHayL_Core unit test
        run: ./test/unit_test_grhayl_core_test_suite
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  flux:
    strategy:
      fail-fast: false
      matrix:
        test-function: [hybrid_flux, tabulated_flux]
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/flux_source/${{ matrix.test-function }}_input.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/flux_source/${{ matrix.test-function }}_output.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/flux_source/${{ matrix.test-function }}_output_pert.bin
          curl -O https://stellarcollapse.org/EOS/LS220_234r_136t_50y_analmu_20091212_SVNr26.h5.bz2 && bunzip2 LS220_234r_136t_50y_analmu_20091212_SVNr26.h5.bz2
      - name: Run flux unit test for ${{ matrix.test-function }} function
        run: ./test/unit_test_${{ matrix.test-function }}
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  reconstruction:
    strategy:
      fail-fast: false
      matrix:
        test-function: [PLM_reconstruction, WENO5_reconstruction]
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/reconstruction/${{ matrix.test-function }}_input.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/reconstruction/${{ matrix.test-function }}_output.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/reconstruction/${{ matrix.test-function }}_output_pert.bin
      - name: Run reconstruction unit test for ${{ matrix.test-function }} function
        run: ./test/unit_test_${{ matrix.test-function }}
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  neutrinos:
    strategy:
      fail-fast: false
      matrix:
        test-function: [nrpyleakage_optically_thin_gas, nrpyleakage_constant_density_sphere, nrpyleakage_luminosities]
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/Neutrinos/${{ matrix.test-function }}_unperturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/Neutrinos/${{ matrix.test-function }}_perturbed.bin
          curl -O https://stellarcollapse.org/EOS/SLy4_3335_rho391_temp163_ye66.h5.bz2 && bunzip2 SLy4_3335_rho391_temp163_ye66.h5.bz2
      - name: Run neutrinos unit test for ${{ matrix.test-function }} function
        run: ./test/unit_test_${{ matrix.test-function }} SLy4_3335_rho391_temp163_ye66.h5 1
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  con-to-prim-tabulated:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Palenzuela1D_rho_vs_T_unperturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Palenzuela1D_Pmag_vs_Wm1_unperturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Palenzuela1D_rho_vs_T_perturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Palenzuela1D_Pmag_vs_Wm1_perturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Palenzuela1D_entropy_rho_vs_T_unperturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Palenzuela1D_entropy_Pmag_vs_Wm1_unperturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Palenzuela1D_entropy_rho_vs_T_perturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Palenzuela1D_entropy_Pmag_vs_Wm1_perturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Newman1D_rho_vs_T_unperturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Newman1D_Pmag_vs_Wm1_unperturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Newman1D_rho_vs_T_perturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Newman1D_Pmag_vs_Wm1_perturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Newman1D_entropy_rho_vs_T_unperturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Newman1D_entropy_Pmag_vs_Wm1_unperturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Newman1D_entropy_rho_vs_T_perturbed.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/con2prim/con2prim_tabulated_Newman1D_entropy_Pmag_vs_Wm1_perturbed.bin
          curl -O https://stellarcollapse.org/EOS/SLy4_3335_rho391_temp163_ye66.h5.bz2 && bunzip2 SLy4_3335_rho391_temp163_ye66.h5.bz2
      - name: Run unit test for tabulated EOS Con2Prim routines
        run: ./test/unit_test_con2prim_tabulated SLy4_3335_rho391_temp163_ye66.h5 1
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  code-failure:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy EOS table to working directory
        run: |
          curl -O https://stellarcollapse.org/EOS/SLy4_3335_rho391_temp163_ye66.h5.bz2 && bunzip2 SLy4_3335_rho391_temp163_ye66.h5.bz2
      - name: Run unit test for error-catching
        run: |
          for i in {0..72}
          do
            ./Unit_Tests/failure.sh "./test/unit_test_code_error "+$i
          done
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  induction-interpolators:
    strategy:
      fail-fast: false
      matrix:
        metric: [BSSN, ADM]
        centering: [ccc, vvv]
        os: [macos-13, macos-latest]
        exclude:
          - metric: BSSN
            centering: vvv
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/induction/induction_interpolation_input.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/induction/induction_interpolation_${{ matrix.metric }}_input.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/induction/induction_interpolation_${{ matrix.centering }}_${{ matrix.metric }}_output.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/induction/induction_interpolation_${{ matrix.centering }}_${{ matrix.metric }}_output_pert.bin
      - name: Run interpolation test using ${{ matrix.metric }} metric with ${{ matrix.centering }}-centering
        run: |
          ./test/unit_test_induction_${{ matrix.centering }}_${{ matrix.metric }}
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}

  induction-flux:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'gcc'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'gcc'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/induction/HLL_flux_input.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/induction/HLL_flux_with_B_output.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/induction/HLL_flux_with_B_output_pert.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/induction/HLL_flux_with_Btilde_output.bin
          curl -O https://raw.githubusercontent.com/GRHayL/TestData/main/induction/HLL_flux_with_Btilde_output_pert.bin
      - name: Run test of HLL flux functions
        run: |
          ./test/unit_test_HLL_flux
      - name: Generate coverage report
        uses: ./.github/actions/code-coverage
        with:
          compiler: 'gcc'
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
