name: MacOS-clang

on:
  push:
    paths-ignore: ['docs/**', '*.md', 'Makefile_old', '.gitattributes', '.gitignore', 'AUTHORS', 'LICENSE']
    branches: main
  pull_request:

jobs:
  ET-Legacy:
    strategy:
      fail-fast: false
      matrix:
        test-function: [ET_Legacy_conservs, ET_Legacy_primitives, ET_Legacy_induction_gauge_rhs, ET_Legacy_HLL_flux, ET_Legacy_reconstruction]
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: Install clang-14 and hdf5 and md5 sum on Mac OS using Homebrew
        run: |
          brew update && brew install llvm@14 hdf5 md5sha1sum
          # Now install meson and ninja
          python -m pip install -U pip
          python -m pip install meson ninja
      - name: Compile GRHayL
        run: |
          export CC=`ls $(brew --prefix)/opt/llvm/bin/clang-** | egrep 'clang-[0-9]{2}$'`
          export LDFLAGS="-L$(brew --prefix)/opt/llvm/lib"
          export CPPFLAGS="-I$(brew --prefix)/opt/llvm/include"
          ./configure --prefix=`pwd` --compile-silent
          make
          make install
      - name: Copy test data to working directory
        run: |
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/ET_Legacy/${{ matrix.test-function }}_input.bin -o build/${{ matrix.test-function }}_input.bin
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/ET_Legacy/${{ matrix.test-function }}_output.bin -o build/${{ matrix.test-function }}_output.bin
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/ET_Legacy/${{ matrix.test-function }}_output_pert.bin -o build/${{ matrix.test-function }}_output_pert.bin
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/ET_Legacy/md5/${{ matrix.test-function }}.md5 -o build/${{ matrix.test-function }}.md5
          cd build && md5sum -c ${{ matrix.test-function }}.md5 && cd ..
      - name: Run ET IllinoisGRMHD unit test for ${{ matrix.test-function }}
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib
          make check-verbose ${{ matrix.test-function }}

  con-to-prim:
    strategy:
      fail-fast: false
      matrix:
        test-function: [apply_inequality_fixes, Noble2D_Hybrid_Multi_Method, font_fix, enforce_primitive_limits_and_compute_u0, compute_conservs_and_Tmunu]
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: Install clang-14 and hdf5 and md5 sum on Mac OS using Homebrew
        run: |
          brew update && brew install llvm@14 hdf5 md5sha1sum
          # Now install meson and ninja
          python -m pip install -U pip
          python -m pip install meson ninja
      - name: Compile GRHayL
        run: |
          export CC=`ls $(brew --prefix)/opt/llvm/bin/clang-** | egrep 'clang-[0-9]{2}$'`
          export LDFLAGS="-L$(brew --prefix)/opt/llvm/lib"
          export CPPFLAGS="-I$(brew --prefix)/opt/llvm/include"
          ./configure --prefix=`pwd` --compile-silent
          make
          make install
      - name: Copy test data to working directory
        run: |
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/con2prim/Noble2D_initial_data.bin -o build/Noble2D_initial_data.bin
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/con2prim/${{ matrix.test-function }}.bin -o build/${{ matrix.test-function }}.bin
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/con2prim/${{ matrix.test-function }}_pert.bin -o build/${{ matrix.test-function }}_pert.bin
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/con2prim/md5/${{ matrix.test-function }}.md5 -o build/${{ matrix.test-function }}.md5
          cd build && md5sum -c ${{ matrix.test-function }}.md5 && cd ..
      - name: Run con2prim unit test for ${{ matrix.test-function }} function
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib
          make check-verbose ${{ matrix.test-function }}

  tabulated-eos:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: install clang-14 and hdf5 on Mac OS using Homebrew
        run: |
          brew update && brew install llvm@14 hdf5
          # Now install meson and ninja
          python -m pip install -U pip
          python -m pip install meson ninja
      - name: Compile GRHayL
        run: |
          export CC=`ls $(brew --prefix)/opt/llvm/bin/clang-** | egrep 'clang-[0-9]{2}$'`
          export LDFLAGS="-L$(brew --prefix)/opt/llvm/lib"
          export CPPFLAGS="-I$(brew --prefix)/opt/llvm/include"
          ./configure --prefix=`pwd` --compile-silent
          make
          make install
      - name: Copy test data to working directory
        run: curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/EOS/simple_table.h5 -o build/simple_table.h5
      - name: Run tabulated EOS unit test
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib
          make check-verbose tabulated_eos

  flux_source:
    strategy:
      fail-fast: false
      matrix:
        test-function: [flux_source]
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: install clang-14 and hdf5 on Mac OS using Homebrew
        run: |
          brew update && brew install llvm@14 hdf5
          # Now install meson and ninja
          python -m pip install -U pip
          python -m pip install meson ninja
      - name: Compile GRHayL
        run: |
          export CC=`ls $(brew --prefix)/opt/llvm/bin/clang-** | egrep 'clang-[0-9]{2}$'`
          export LDFLAGS="-L$(brew --prefix)/opt/llvm/lib"
          export CPPFLAGS="-I$(brew --prefix)/opt/llvm/include"
          ./configure --prefix=`pwd` --compile-silent
          make
          make install
      - name: Copy test data to working directory
        run: |
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/flux_source/${{ matrix.test-function }}_dirn1.bin -o build/${{ matrix.test-function }}_dirn1.bin
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/flux_source/${{ matrix.test-function }}_dirn2.bin -o build/${{ matrix.test-function }}_dirn2.bin
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/flux_source/${{ matrix.test-function }}_dirn3.bin -o build/${{ matrix.test-function }}_dirn3.bin
          curl https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/flux_source/${{ matrix.test-function }}_output_rhs_data.bin -o build/${{ matrix.test-function }}_output_rhs_data.bin
      - name: Run flux_source unit test for ${{ matrix.test-function }} functions
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib
          make check-verbose ${{ matrix.test-function }}
