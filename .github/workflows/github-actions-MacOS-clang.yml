name: MacOS-clang

on:
  push:
    paths-ignore: ['docs/**', '*.md', 'Makefile_old', '.gitattributes', '.gitignore', 'AUTHORS', 'LICENSE', 'implementations/**']
    branches: main
  pull_request:

jobs:
  ET-Legacy:
    strategy:
      fail-fast: false
      matrix:
        test-function: [ET_Legacy_conservs, ET_Legacy_primitives, ET_Legacy_induction_gauge_rhs, ET_Legacy_HLL_flux, ET_Legacy_reconstruction, ET_Legacy_flux_source]
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'clang'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'clang'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/ET_Legacy/${{ matrix.test-function }}_input.bin
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/ET_Legacy/${{ matrix.test-function }}_output.bin
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/ET_Legacy/${{ matrix.test-function }}_output_pert.bin
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/ET_Legacy/md5/${{ matrix.test-function }}.md5
          md5sum -c ${{ matrix.test-function }}.md5
      - name: Run ET IllinoisGRMHD unit test for ${{ matrix.test-function }}
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib:`pwd`/lib
          ./test/unit_test_${{ matrix.test-function }}
#      - name: Generate coverage report
#        uses: ./.github/actions/code-coverage

  con-to-prim:
    strategy:
      fail-fast: false
      matrix:
        test-function: [apply_inequality_fixes, Noble2D_Hybrid_Multi_Method, font_fix, enforce_primitive_limits_and_compute_u0, compute_conservs_and_Tmunu]
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'clang'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'clang'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/con2prim/Noble2D_initial_data.bin
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/con2prim/${{ matrix.test-function }}.bin
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/con2prim/${{ matrix.test-function }}_pert.bin
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/con2prim/md5/${{ matrix.test-function }}.md5
          md5sum -c ${{ matrix.test-function }}.md5
      - name: Run con2prim unit test for ${{ matrix.test-function }} function
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib:`pwd`/lib
          ./test/unit_test_${{ matrix.test-function }}
#      - name: Generate coverage report
#        uses: ./.github/actions/code-coverage

  tabulated-eos:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'clang'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'clang'
      - name: Copy test data to working directory
        run: curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/EOS/simple_table.h5
      - name: Run tabulated EOS unit test
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib:`pwd`/lib
          ./test/unit_test_tabulated_eos simple_table.h5
#      - name: Generate coverage report
#        uses: ./.github/actions/code-coverage

  piecewise-polytrope-eos:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'clang'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'clang'
      - name: Run piecewise polytrope EOS unit test
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib:`pwd`/lib
          ./test/unit_test_piecewise_polytrope
#      - name: Generate coverage report
#        uses: ./.github/actions/code-coverage

  grhayl-core:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'clang'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'clang'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/grhayl_core/grhayl_core_test_suite_input.bin
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/grhayl_core/md5/grhayl_core_test_suite.md5
          md5sum -c grhayl_core_test_suite.md5
      - name: Run GRHayL_Core unit test
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib:`pwd`/lib
          ./test/unit_test_grhayl_core_test_suite
#      - name: Generate coverage report
#        uses: ./.github/actions/code-coverage

  reconstruction:
    strategy:
      fail-fast: false
      matrix:
        test-function: [minmod_reconstruction, mc_reconstruction, superbee_reconstruction]
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'clang'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'clang'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/reconstruction/${{ matrix.test-function }}_input.bin
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/reconstruction/${{ matrix.test-function }}_output.bin
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/reconstruction/${{ matrix.test-function }}_output_pert.bin
      - name: Run reconstruction unit test for ${{ matrix.test-function }} function
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib:`pwd`/lib
          ./test/unit_test_${{ matrix.test-function }}
#      - name: Generate coverage report
#        uses: ./.github/actions/code-coverage

  neutrinos:
    strategy:
      fail-fast: false
      matrix:
        test-function: [nrpyleakage_optically_thin_gas, nrpyleakage_constant_density_sphere]
        os: [macos-11, macos-12]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - name: Setup OS and compiler
        uses: ./.github/actions/OS_setup
        with:
          compiler: 'clang'
      - name: Compile GRHayL
        uses: ./.github/actions/compile_GRHayL
        with:
          compiler: 'clang'
      - name: Copy test data to working directory
        run: |
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/Neutrinos/${{ matrix.test-function }}_unperturbed.bin
          curl -O https://raw.githubusercontent.com/SamuelCupp/GRHayL_TestData/main/Neutrinos/${{ matrix.test-function }}_perturbed.bin
          curl -O https://stellarcollapse.org/EOS/SLy4_3335_rho391_temp163_ye66.h5.bz2 && bunzip2 SLy4_3335_rho391_temp163_ye66.h5.bz2
      - name: Run neutrinos unit test for ${{ matrix.test-function }} function
        run: |
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib:`pwd`/lib
          ./test/unit_test_${{ matrix.test-function }} SLy4_3335_rho391_temp163_ye66.h5 2
#      - name: Generate coverage report
#        uses: ./.github/actions/code-coverage
