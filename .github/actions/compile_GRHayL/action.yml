name: compile_GRHayL
description: 'Compile GRHayL using selected compiler'
inputs:
  compiler:
    description: compiler for test
    required: true
    default: 'gcc'

runs:
  using: "composite"
  steps:
    - if: runner.os == 'Linux' && inputs.compiler == 'gcc'
      run: CC=gcc ./configure --prefix=`pwd` --cflags='-ftest-coverage -fprofile-arcs'
      shell: bash

    - if: runner.os == 'Linux' && inputs.compiler == 'clang'
      run: CC=clang-14 ./configure --prefix=`pwd` --cflags='-fprofile-instr-generate -fcoverage-mapping'
      shell: bash

    - if: runner.os == 'Linux' && inputs.compiler == 'intel'
      run: |
        source /opt/intel/oneapi/setvars.sh
        printenv >> $GITHUB_ENV
        CC=icx ./configure --prefix=`pwd` --cflags='-ftest-coverage -fprofile-arcs'
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`pwd`/lib
      shell: bash

    - if: runner.os == 'MacOS' && inputs.compiler == 'gcc'
      run: |
        export CC=`ls $(brew --prefix)/opt/gcc/bin/gcc-** | egrep gcc-[0-9]{2}$'`
        ./configure --prefix="$(pwd)" --cflags='-ftest-coverage -fprofile-arcs' --hdf5dir="$(brew --prefix)/opt/hdf5"
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`pwd`/lib
      shell: bash

    - if: runner.os == 'MacOS' && inputs.compiler == 'clang'
      run: |
        export CC=`ls $(brew --prefix)/opt/llvm/bin/clang-** | egrep 'clang-[0-9]{2}$'`
        ./configure --prefix="$(pwd)" --cflags='-ftest-coverage -fprofile-arcs' --hdf5dir=$(brew --prefix)/opt/hdf5 \
        --cflags="-I$(brew --prefix)/opt/llvm/include" \
        --clibs="-L$(brew --prefix)/opt/llvm/lib"
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(brew --prefix)/opt/llvm/lib:`pwd`/lib
      shell: bash

    - run: |
        make
        make install
      shell: bash
