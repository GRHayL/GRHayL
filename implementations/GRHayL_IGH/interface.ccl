# Interface definition for thorn GRHayL_IGH

implements: GRHayL_IGH

inherits: ADMBase, Tmunubase, HydroBase, GRHayLET

USES INCLUDE: Symmetry.h
USES INCLUDE: GRHayLET.h

#########################################################

# BSSN-based quantities, computed from ADM quantities
CCTK_REAL BSSN_quantities type = GF TAGS='prolongation="none" Checkpoint="no"'
{
   phi_bssn, psi_bssn
   gtxx, gtxy, gtxz, gtyy, gtyz, gtzz
   gtupxx, gtupxy, gtupxz, gtupyy, gtupyz, gtupzz
} "BSSN quantities, computed from ADM quantities"

#########################################################

# Primitive variables
# The HydroBase quantities rho and press are used as the primitives in this code. However,
# GRHayL uses the velocity v^i = u^i/u^0, while HydroBase uses the Valencia velocity, so
# we declare our own velocities here.
cctk_real grmhd_primitives_allbutBi type = GF TAGS='InterpNumTimelevels=1 prolongation="none"'
{
  vx, vy, vz
} "Primitive variables density, pressure, and components of three velocity v^i. Note that v^i is defined in terms of 4-velocity as: v^i = u^i/u^0. Note that this definition differs from the Valencia formalism."

#########################################################

# Evolved variables
cctk_real grmhd_conservatives type = GF Timelevels=3
{
  rho_star, tau, Stildex, Stildey, Stildez # Note that Stildei = \tilde{S}_i.
} "Evolved mhd variables"

#########################################################

# RHS variables for MoL timestepping
cctk_real grmhd_conservatives_rhs type = GF TAGS='prolongation="none" Checkpoint="no"'
{
  rho_star_rhs, tau_rhs, Stildex_rhs, Stildey_rhs, Stildez_rhs
} "Storage for the right-hand side of the partial_t rho_star, partial_t tau, and partial_t tilde{S}_i equations. Needed for MoL timestepping."

#########################################################

# Temporary variables for A-field evolution
CCTK_REAL grmhd_cmin_cmax_temps type = GF TAGS='prolongation="none" Checkpoint="no"'
{
  cmin_x, cmax_x
  cmin_y, cmax_y
  cmin_z, cmax_z
} "Store min and max characteristic speeds in all three directions."


#Temporary variables for flux computation
cctk_real grmhd_flux_temps type = GF TAGS='prolongation="none" Checkpoint="no"'
{
  rho_star_flux, tau_flux, Stildex_flux, Stildey_flux, Stildez_flux
} "Temporary variables for storing the flux terms of tilde{S}_i."

# Temporary variables for reconstruction
CCTK_REAL grmhd_primitives_reconstructed_temps type = GF TAGS='prolongation="none" Checkpoint="no"'
{
  rhor, pressr, vxr, vyr, vzr
  rhol, pressl, vxl, vyl, vzl
  vxrr, vxrl, vyrr, vyrl, vzrr, vzrl
  vxlr, vxll, vylr, vyll, vzlr, vzll
} "Temporary variables used for primitives reconstruction"

#########################################################

# Diagnostic gridfunctions
CCTK_REAL diagnostic_gfs type = GF TAGS='prolongation="none" Checkpoint="no"'
{
  failure_checker
} "Gridfunction to track conservative-to-primitives solver fixes. Beware that this gridfunction is overwritten at each RK substep."

###########################################################################

#########################################
###  Aliased functions from Carpet    ###
#########################################

CCTK_INT FUNCTION GetRefinementLevel(
      CCTK_POINTER_TO_CONST IN cctkGH)
USES FUNCTION GetRefinementLevel

####################################################
###  Aliased function from MoL for registration  ###
####################################################

CCTK_INT FUNCTION MoLRegisterEvolved(
      CCTK_INT IN EvolvedIndex,
      CCTK_INT IN RHSIndex)
CCTK_INT FUNCTION MoLRegisterEvolvedGroup(
      CCTK_INT IN EvolvedIndex,
      CCTK_INT IN RHSIndex)
CCTK_INT FUNCTION MoLRegisterSaveAndRestoreGroup(
      CCTK_INT IN SandRIndex)

USES FUNCTION MoLRegisterEvolved
USES FUNCTION MoLRegisterEvolvedGroup
USES FUNCTION MoLRegisterSaveAndRestoreGroup
