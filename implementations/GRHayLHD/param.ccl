# Parameter definitions for thorn GRHayLHD

#TODO: only needed if we keep the STORAGE for ADMBase in the schedule
shares: ADMBase
USES CCTK_INT lapse_timelevels
USES CCTK_INT shift_timelevels
USES CCTK_INT metric_timelevels

#########################################################

INT Convert_to_HydroBase_every "How often to convert GRHayLHD primitive variables to HydroBase (Valencia formulation) primitive variables? Needed for some ET-based diagnostics. NOT needed for pure GRHayLHD runs."
{
 0:* :: "zero (disable) or positive (every N iterations)"
} 0

CCTK_BOOLEAN update_Tmunu "Update Tmunu, for RHS of Einstein's equations?" STEERABLE=ALWAYS
{
} "yes"

#########################################################

# Symmetry boundary params. Needed for handling staggered gridfunctions.
KEYWORD Symmetry "Currently only no symmetry supported, though work has begun in adding equatorial-symmetry support."
{
  "none"       :: "no symmetry, full 3d domain"
} "none"

#########################################################

# OUTER BOUNDARY CONDITION CHOICE
KEYWORD Matter_BC "Chosen Matter boundary condition"
{
  "outflow" :: "Outflow boundary conditions"
  "frozen"  :: "Frozen boundaries"
} "outflow"

#########################################################

# Verbosity Level
KEYWORD verbose "Determines how much evolution information is output" STEERABLE=ALWAYS
{
  "no"        :: "Complete silence"
  "essential" :: "Essential health monitoring of the GRMHD evolution: Information about conservative-to-primitive fixes, etc."
  "essential+iteration output" :: "Outputs health monitoring information, plus a record of which RK iteration. Very useful for backtracing a crash."
} "essential+iteration output"

#########################################################

# Parameters for perturbing the initial data from HydroBase
INT random_seed "Random seed for random, generally roundoff-level perturbation on initial data. Seeds srand(), and rand() is used for the RNG."
{
 0:99999999 :: "Anything unsigned goes."
} 0

REAL random_pert "Random perturbation atop data"
{
 *:* :: "Anything goes."
} 0
